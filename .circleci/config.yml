version: 2
jobs:
  frontend:
    docker:
      - image: circleci/node:12.13.1
    working_directory: ~/project/client
    steps:
      - checkout:
          path: ~/project
      - setup_remote_docker
      - run:
          working_directory: ~/project/
          name: "Run openapi-generator-cli to generate the Elm client"
          command: |
            docker create -v /tmp --name openapi openapitools/openapi-generator-cli:latest
            docker cp api.json openapi:/tmp
            docker run --volumes-from openapi openapitools/openapi-generator-cli generate -i /tmp/api.json -g elm -o /tmp/client/generated/
            docker cp openapi:/tmp/client/generated ./client/
      - run: npm install
      - run: npm install elm@latest-0.19.1
      - run: echo "export PATH=$PWD/node_modules/.bin:$PATH" >> $BASH_ENV
      - run: npm run test

  backend:
    docker:
      - image: circleci/python:3.7.5
    environment:
      CONFIG_FILE: "../config.py"
    working_directory: ~/project/server
    steps:
      - checkout:
          path: ~/project
      - run: pip install --user poetry
      - run: echo "export PATH=$HOME/.local/bin/:$PATH" >> $BASH_ENV
      - run: poetry install
      - run: cp .env.sample.test .env.sample
      - run: poetry run pytest
      - run: poetry run flake8
      - run: |
          export CURRENT=$(cat ../api.json | cksum)
          export REAL=$(QUART_APP='app' poetry run quart openapi | cksum)
          if [ "$CURRENT" == "$REAL" ]; then
            echo 'API has not changed!'
          else
            echo 'UPDATE the API!!' || false
          fi


workflows:
  version: 2
  build-app:
    jobs:
      - frontend
      - backend
